---
title: "Unit Test v2"
format: html
editor_options: 
  chunk_output_type: console
---

## Load library + functions

```{r}
source("./src/functions.R")

gc()
library(tidyverse)
```

## Import Dataset

```{r}
exDF <- read_csv("./Sandbox/inputCSV.csv")
subjects <- as.vector(t(exDF))
```

## Find Duplicates

The following code chunks are examples of duplicate sample detection.

```{r}
#reset duplicate
exDF[2,2] <- "b66"
# listDupes(exDF)

#0=no duplicates found
if(listDupes(exDF)==0){
  print("No duplicates found.")
}else{
  print("There are duplicated sample names.")
}
```

```{r}
# exDF <- read_csv("./Sandbox/inputCSV.csv")

#function to simplify typing same thing each time
ld <- function(){
  return(listDupes(exDF))
}

#exDF contains 1 duplicate
ld()

#multi duplicate
exDF[4,] <- "d72"
exDF[1,3] <- "b61"
ld()
```

## Minimum gels req (WIP)

Use the `minGels` function to determine minimum number of gels required to fit all samples + ladder per gel.

```{r}
minGels(
  numLanes = 6,
  numGroups = 4,
  perGroup = 4
)
```

## Create gels

The following 2 functions create a non-centered gel according to the following rules:

1. all members of a group must be represented â‰¥ 1
1. 2 samples from same group can't be next to each other

```{r}
gels <- gelBaseline(
  totalSamples = 16,
  perLine = 8,
  entryID = subjects
)

gels <- addCols(
  inputDF = gels,
  numLanes = 11
)

View(gels)
```

## Center Samples on Gel

The `centerSamples` function takes a non-centered gel and attempts to center the samples (ladder is not centered).

```{r}
centeredGel <- centerSamples(gels)
View(centeredGel)
```

Each row is considered a separate gel.

## rm

```{r}
rm(ld)
```
